//Server_Side
#include<stdio.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>

int main(void)
{
    int sockfd, length, choice;
    struct sockaddr_in client, server;
    int matA[2][2], matB[2][2], result[2][2];
    sockfd = socket(AF_INET, SOCK_DGRAM, 0);
    server.sin_family = AF_INET;
    server.sin_port = 6210;
    server.sin_addr.s_addr = inet_addr("127.0.0.1");
    bind(sockfd, (struct sockaddr*)&server, sizeof(server));
    length = sizeof(server);

    while (1) {
        recvfrom(sockfd, matA, sizeof(matA), 0, (struct sockaddr*)&client, &length);
        recvfrom(sockfd, matB, sizeof(matB), 0, (struct sockaddr*)&client, &length);
        recvfrom(sockfd, &choice, sizeof(choice), 0, (struct sockaddr*)&client, &length);

        switch (choice) {
        case 1:
            for (int i = 0; i < 2; i++)
                for (int j = 0; j < 2; j++)
                    result[i][j] = matA[i][j] + matB[i][j];
            break;

        case 2:
            for (int i = 0; i < 2; i++)
                for (int j = 0; j < 2; j++)
                    result[i][j] = matA[i][j] - matB[i][j];
            break;

        case 3:
            for (int i = 0; i < 2; i++)
                for (int j = 0; j < 2; j++) {
                    result[i][j] = 0;
                    for (int k = 0; k < 2; k++)
                        result[i][j] += matA[i][k] * matB[k][j];
                }
            break;

        case 4:
            for (int i = 0; i < 2; i++)
                for (int j = 0; j < 2; j++)
                    result[i][j] = (matB[i][j] != 0) ? matA[i][j] / matB[i][j] : 0;
            break;
        }

        sendto(sockfd, result, sizeof(result), 0, (struct sockaddr*)&client, length);
        printf("\nMatrix operation completed and sent to client.\n");
    }
}
