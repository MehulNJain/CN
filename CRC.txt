
#include <stdio.h>

int main() {
    int arr[100] = {0}, d[50] = {0}, rem[20] = {0}, temp[100] = {0};
    int n, x;

    printf("Enter the size of dividend: ");
    if (scanf("%d", &n) != 1 || n <= 0 || n > 100) {
        printf("Invalid input for dividend size.\n");
        return 1;
    }
    printf("Enter the dividend: ");
    for (int i = 0; i < n; i++) {
        if (scanf("%d", &arr[i]) != 1 || (arr[i] != 0 && arr[i] != 1)) {
            printf("Invalid input for dividend.\n");
            return 1;
        }
    }

    printf("Enter the size of divisor: ");
    if (scanf("%d", &x) != 1 || x <= 0 || x > 50) {
        printf("Invalid input for divisor size.\n");
        return 1;
    }

    printf("Enter the divisor: ");
    for (int i = 0; i < x; i++) {
        if (scanf("%d", &d[i]) != 1 || (d[i] != 0 && d[i] != 1)) {
            printf("Invalid input for divisor.\n");
            return 1;
        }
    }

    for (int i = n; i < n + x - 1; i++) {
        arr[i] = 0;
    }

    for (int i = 0; i < n + x - 1; i++) {
        temp[i] = arr[i];
    }

    for (int i = 0; i < n; i++) {
        if (temp[i] == 1) {
            for (int j = 0; j < x; j++) {
                temp[i + j] ^= d[j];
            }
        }
    }

    for (int i = 0; i < x - 1; i++) {
        rem[i] = temp[i + n];
        arr[i + n] = rem[i];
    }

    printf("\nRemainder: ");
    for (int i = 0; i < x - 1; i++) {
        printf("%d", rem[i]);
    }

    printf("\nTransmitted Codeword: ");
    for (int i = 0; i < n + x - 1; i++) {
        printf("%d", arr[i]);
    }

    printf("\nChecking at receiver side:\n");
    for (int i = 0; i < n; i++) {
        if (arr[i] == 1) {
            for (int j = 0; j < x; j++) {
                arr[i + j] ^= d[j];
            }
        }
    }

    printf("Received Remainder: ");
    int error_detected = 0;
    for (int i = 0; i < x - 1; i++) {
        printf("%d", arr[i + n]);
        if (arr[i + n] != 0) {
            error_detected = 1;
        }
    }

    if (error_detected) {
        printf("\nError detected!\n");
    } else {
        printf("\nNo error detected.\n");
    }
    
    return 0;
}
